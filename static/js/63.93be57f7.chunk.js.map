{"version":3,"file":"static/js/63.93be57f7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactForm/ContactForm.module.css?4d46","components/Contacts/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactList/ContactList.module.css?357e","components/Contacts/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/FilterContact/FilterContact.module.css?cd27","components/Contacts/FilterContact/FilterContact.js","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form__contacts\":\"ContactForm_form__contacts__JCXMT\",\"form__text\":\"ContactForm_form__text__vMwpk\",\"input__form\":\"ContactForm_input__form__S+No0\",\"btn__form\":\"ContactForm_btn__form__xBeBN\"};","import { useDispatch,useSelector } from \"react-redux\";\nimport { fetchContactsAddThunk } from '../../../redux/operations'\nimport css from './ContactForm.module.css'\n\nexport function ContactForm() {\n  const dispatch = useDispatch()\n  const contacts = useSelector(state => state.contactDetails.contacts.items)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, phone } = e.currentTarget;\n    \n    const equalName = contacts.find(contact => name.value.toUpperCase() === contact.name.toUpperCase()) \n    if (equalName) return alert(`${equalName.name} is already in contacts`);\n\n    const equalNumber = contacts.find(contact => phone.value === contact.phone) \n    if (equalNumber) return alert(`${equalNumber.phone} is already in contacts`);\n\n    dispatch(fetchContactsAddThunk({\n      name: name.value,\n      number: phone.value\n    }))\n\n    name.value = \"\";\n    phone.value = \"\";\n  };\n \n        return (\n            <form onSubmit={handleSubmit} className={css.form__contacts}>\n                <label>\n                  <p className={css.form__text}>Name</p>\n                  <input\n                      className={css.input__form}\n                      type=\"text\"\n                      name=\"name\"\n                      pattern=\"^[a-zA-Z]{1,10}\"\n                      title=\"The name can contain only letters, from 1 to 10 Latin letters\"\n                      required/>\n                </label>\n                <label>\n                  <p className={css.form__text}>Number</p>\n                  <input\n                      className={css.input__form}\n                      type=\"tel\"\n                      name=\"phone\"\n                      pattern=\"[0-9]{9}\"\n                      maxLength=\"15\"\n                      title=\"please enter 9 digit number only (xxxxxxxxx)\"\n                      required\n                  />\n                </label>\n                \n            <button className={css.btn__form} type=\"submit\">Add contact</button>\n            </form>\n            \n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"item__contact\":\"ContactList_item__contact__nIy8y\",\"text__contact\":\"ContactList_text__contact__PuO5N\",\"btn__delete__contact\":\"ContactList_btn__delete__contact__eu151\",\"container__contact\":\"ContactList_container__contact__uhKRQ\",\"TextContactList\":\"ContactList_TextContactList__1mKrT\"};","import { useEffect } from 'react';\nimport css from './ContactList.module.css'\nimport { toast } from 'react-toastify';\nimport { fetchContactsDataThunk, fetchContactsDeleteThunk } from 'redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n\n  const dispatch = useDispatch()\n  const contacts = useSelector(state => state.contactDetails.contacts)\n  const filterContacts = useSelector(state => state.contactDetails.filter)\n  const error = useSelector(state => state.contactDetails.contacts.error)\n\n  useEffect(() => {\n    dispatch(fetchContactsDataThunk());\n  }, [dispatch]);\n  \n  const loding = useSelector(state => state.contactDetails.contacts.isLoading)\n\n\n\n  const visibleContact = contacts.items.filter(constact => constact.name.toUpperCase().includes(filterContacts))\n  if (error) {\n    toast.error(\"Error operation failed\", {\n    position: toast.POSITION.TOP_CENTER\n  })}\n  \n       \n  return (loding && <Loader />) ||\n    <>\n            <p className={css.TextContactList}>Contact List</p>\n                  <ul className={css.container__contact}>\n                       { visibleContact?.map(el => {\n                          return <li className={css.item__contact} key={el.id}>\n                                    <p className={css.text__contact}>{el.name}: {el.number}</p>\n                                    <button className={css.btn__delete__contact}  onClick={(e) => dispatch(fetchContactsDeleteThunk(el.id))} type=\"button\">\n                                      Delete\n                                    </button>\n                                  </li>\n                              })}\n                      </ul>  \n     </>\n}","// extracted by mini-css-extract-plugin\nexport default {\"text__input__find\":\"FilterContact_text__input__find__DnsY3\",\"input__find\":\"FilterContact_input__find__tV6kQ\",\"label__find\":\"FilterContact_label__find__k7-Ph\"};","import css from './FilterContact.module.css'\nimport { filterOnName } from 'redux/contactsSlice'\nimport { useDispatch } from 'react-redux'\n\nexport const FilterContact = () => {\n\nconst dispatch = useDispatch()\nconst filterListAddState = (e) => {\n  dispatch(filterOnName(e.currentTarget.value))\n}\n  \nreturn  <label className={css.label__find}>\n          <p className={css.text__input__find}>Find contacts by name</p>\n          <input\n              className={css.input__find}\n              onChange={filterListAddState}\n              type=\"text\"\n              name=\"filter\"\n              pattern=\"^[a-zA-Z]+$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n        </label>   \n}","// extracted by mini-css-extract-plugin\nexport default {\"ContactContainer\":\"ContactsPage_ContactContainer__-9Jq1\"};","import { ContactForm } from \"components/Contacts/ContactForm/ContactForm\";\nimport { ContactList } from \"components/Contacts/ContactList/ContactList\";\nimport { FilterContact } from \"components/Contacts/FilterContact/FilterContact\";\nimport css from './ContactsPage.module.css'\n\nconst ContactsPage = () => {\n\n  return <div className={css.ContactContainer}>\n\n            <FilterContact/>\n            \n            <ContactList />\n            \n            <ContactForm />\n        </div>\n      \n  \n};\n\nexport default ContactsPage"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","state","contactDetails","items","_jsxs","onSubmit","e","preventDefault","_e$currentTarget","currentTarget","name","phone","equalName","find","contact","value","toUpperCase","alert","concat","equalNumber","fetchContactsAddThunk","number","className","css","children","_jsx","type","pattern","title","required","maxLength","ContactList","filterContacts","filter","error","useEffect","fetchContactsDataThunk","loding","isLoading","visibleContact","constact","includes","toast","position","Loader","_Fragment","map","el","onClick","fetchContactsDeleteThunk","id","FilterContact","onChange","filterOnName"],"sourceRoot":""}