{"version":3,"file":"static/js/425.86811ddc.chunk.js","mappings":"8MACA,EAAgC,iCAAhC,EAA6E,6BAA7E,EAAsH,6BAAtH,EAAgK,8BAAhK,EAAyM,4B,2BC+DzM,EAxDkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MA0BjB,OAzBYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,KAAK,KACnCC,EAAAA,GAAAA,MAAY,mBAAoB,CACjDC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WAiBTC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,QAAMI,SAdM,SAACC,GAChBA,EAAEC,iBACF,IAAAC,EAA4BF,EAAEG,OAAtBC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SACf1B,GAAS2B,EAAAA,EAAAA,IAAa,CAAEF,MAAOA,EAAMG,MAAOF,SAAUA,EAASE,SAG/DH,EAAMG,MAAQ,GACdF,EAASE,MAAQ,EACnB,EAM+BX,UAAWC,EAAcC,SAAA,EAClDH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACEU,EAAAA,EAAAA,KAAA,KAAGZ,UAAWC,EAAcC,SAAC,WAC7BU,EAAAA,EAAAA,KAAA,SAAOZ,UAAWC,EAAgBY,KAAK,QAAQC,KAAK,QAAQC,UAAQ,EAACC,MAAM,SAE7EjB,EAAAA,EAAAA,MAAA,SAAAG,SAAA,EACEU,EAAAA,EAAAA,KAAA,KAAGZ,UAAWC,EAAcC,SAAC,cAC7BU,EAAAA,EAAAA,KAAA,SAAOZ,UAAWC,EAAgBY,KAAK,WAAWC,KAAK,WAAWC,UAAQ,EAACE,aAAa,KAAMC,UAAW,EAAGC,UAAW,GAAIH,MAAM,4CAEnIJ,EAAAA,EAAAA,KAAA,UAAQZ,UAAWC,EAAcY,KAAK,SAAQX,SAAC,eAElDU,EAAAA,EAAAA,KAACQ,EAAAA,GAAc,CACZ9B,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjB6B,aAAa,EACb5B,cAAY,EACZ6B,KAAK,EACLC,kBAAgB,EAChB5B,WAAS,EACTD,cAAY,EACZI,MAAM,YAId,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ContainerForm\":\"LoginPage_ContainerForm__LF8xv\",\"FormLogin\":\"LoginPage_FormLogin__EQHJD\",\"textInput\":\"LoginPage_textInput__zuq76\",\"LoginInput\":\"LoginPage_LoginInput__rxfzs\",\"btnLogin\":\"LoginPage_btnLogin__vg7XV\"};","import { useDispatch } from \"react-redux\";\nimport { fetchLogUser } from \"redux/operations\";\nimport css from './LoginPage.module.css'\nimport { useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst LoginPage = () => {\n  const dispatch = useDispatch()\n  const err = useSelector(state => state.userDetails.error)\n  const notify = () => toast.error('Failed operation', {\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"light\",\n  });\n  \n\n  const onSubmit = (e) => { \n    e.preventDefault();\n    const { email, password } = e.target;\n    dispatch(fetchLogUser({ email: email.value, password: password.value })) \n    \n    \n    email.value = '';\n    password.value = '';\n  };\n    \n  if(err) {notify()}\n  \n  return (\n    <div className={css.ContainerForm}>\n       <form onSubmit={onSubmit} className={css.FormLogin}>\n        <label>\n          <p className={css.textInput}>Email</p>\n          <input className={css.LoginInput} type=\"email\" name=\"email\" required title=\"\" />\n        </label>\n        <label>\n          <p className={css.textInput}>Password</p>\n          <input className={css.LoginInput} type=\"password\" name=\"password\" required autoComplete=\"on\"  minLength={6} maxLength={10} title=\"name can contain 6 to 10 characters\"/>\n        </label>\n        <button className={css.btnLogin} type=\"submit\">Submit</button>\n      </form>\n     <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n        />\n    </div>\n  );\n};\n\nexport default LoginPage"],"names":["dispatch","useDispatch","useSelector","state","userDetails","error","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_jsxs","className","css","children","onSubmit","e","preventDefault","_e$target","target","email","password","fetchLogUser","value","_jsx","type","name","required","title","autoComplete","minLength","maxLength","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss"],"sourceRoot":""}